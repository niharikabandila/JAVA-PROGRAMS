class Thread1 extends Thread
{
	public void run()
	{
		for(int i=0;i<10;i++)
		{
			System.out.println("MSD");
		}
	}
}
class Thread2 extends Thread
{
	public void run()
	{
		for(int i=0;i<10;i++)
			System.out.println("Virat");
	}
}
public class Threadding {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Thread1 t1=new Thread1();
		Thread2 t2=new Thread2();
		t1.start();
		t2.start();
		for(int i=0;i<10;i++)
			System.out.println("Rohit Sharma");
		System.out.println("T1 Priority="+t1.getPriority());
		System.out.println("T2 Priority="+t2.getPriority());
		System.out.println("Main Thread Priority="+Thread.currentThread().getPriority());
		

	}

}

//THREAD METHODS
//SET AND GET METHODS
class Thread3 extends Thread
{
	public void run()
	{
		for(int i=0;i<5;i++)
			System.out.println(Thread.currentThread().getName()+":"+i);
	}
}
public class ThreadSetMethod {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Thread3 t3=new Thread3();
		t3.start();
		t3.setName("Dhoni");
		Thread.currentThread().setName("YuvaRaj");
		for(int i=0;i<5;i++)
		System.out.println(Thread.currentThread().getName()+":"+i);
		

	}

}

//HOW TO SET THE PRIORITY AND HOW TO EXECUTE THE THREAD FIRST
class Thread3 extends Thread
{
	public void run()
	{
		for(int i=0;i<5;i++)
			System.out.println(Thread.currentThread().getName()+":"+i);
	}
}
class Thread4 extends Thread
{
	public void run()
	{
		for(int i=0;i<5;i++)
			System.out.println(Thread.currentThread().getName()+":"+i);
	}
}
class Thread5 extends Thread
{
	public void run()
	{
		for(int i=0;i<5;i++)
			System.out.println(Thread.currentThread().getName()+":"+i);
	}
}
public class ThreadSetPriority {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Thread3 t3=new Thread3();
		t3.start();
		t3.setName("Dhoni");
		Thread4 t4=new Thread4();
		t4.start();
		t4.setName("Sewag");
		Thread5 t5=new Thread5();
		t5.start();
		t5.setName("Sachin");
		System.out.println("T3->"+t3.getPriority());
		System.out.println("T4->"+t4.getPriority());
		System.out.println("T5->"+t5.getPriority());
		System.out.println("Main->"+Thread.currentThread().getPriority());
		Thread.currentThread().setName("YuvaRaj");
		//SETTING PRIORITY IS NOT AVAILABLE FOR ALL OPERATONS
		t3.setPriority(10);
		t4.setPriority(8);
		t5.setPriority(4);
		for(int i=0;i<5;i++)
		System.out.println(Thread.currentThread().getName()+":"+i);
		System.out.println("PRIORITIES AFTER CHANGING");
		System.out.println("T3->"+t3.getPriority());
		System.out.println("T4->"+t4.getPriority());
		System.out.println("T5->"+t5.getPriority());
		System.out.println("Main->"+Thread.currentThread().getPriority());

	}

}

//SLEEP METHOD

public class ThreadSleep {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String name="NIHARIKA";
		for(int i=0;i<name.length();i++)
		{
			System.out.println(name.charAt(i));
			try{
				Thread.sleep(2000);}
			catch(InterruptedException ie) {
			}
		}
	}

}
//LAB PROGRAM ON THREADING
class Thread7 extends Thread
{
	public void run()
	{
		while(true)
		{
			System.out.println("Good Morning");
			try{
				Thread.sleep(1000);}
			catch(InterruptedException ie) {
				System.out.println(ie);
			}
		}
	}
}
class Thread8 extends Thread
{
	public void run()
	{
		while(true)
		{
			System.out.println("Hello");
			try{
				Thread.sleep(2000);}
			catch(InterruptedException ie) {
				System.out.println(ie);
			}
		}
	}
}
class Thread9 extends Thread
{
	public void run()
	{
		while(true)
		{
			System.out.println("Welcome");
			try{
				Thread.sleep(3000);}
			catch(InterruptedException ie) {
				System.out.println(ie);
			}
		}
	}
}
public class ThreadLab {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Thread7 t1=new Thread7();
		Thread8 t2=new Thread8();
		Thread9 t3=new Thread9();
		t1.start();
		t2.start();
		t3.start();

	}

}

//USING RUNNABLE
class Thread11 implements Runnable
{
	public void run()
	{
		while(true)
		{
			System.out.println("Good Morning");
			try{
				Thread.sleep(1000);}
			catch(InterruptedException ie) {
				System.out.println(ie);
			}
		}
	}
}
class Thread12 implements Runnable
{
	public void run()
	{
		while(true)
		{
			System.out.println("Hello");
			try{
				Thread.sleep(2000);}
			catch(InterruptedException ie) {
				System.out.println(ie);
			}
		}
	}
}
class Thread13 implements Runnable
{
	public void run()
	{
		while(true)
		{
			System.out.println("Welcome");
			try{
				Thread.sleep(3000);}
			catch(InterruptedException ie) {
				System.out.println(ie);
			}
		}
	}
}
public class ThreadRun {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Thread t1=new Thread(new Thread11());
		Thread t2=new Thread(new Thread12());
		Thread t3=new Thread(new Thread13());
		t1.start();
		t2.start();
		t3.start();

	}

}
//YEILD METHOD
//YIELD IS USED TO PAUSE THE CURRENTLY ECECUTING THREAD AND GIVES CHANCE TO OTHER THREADS WHICH ARE IN WAITING
1.IF OTHER THREADS HAVE HIGHER PRIORITY THAT THIS,IT WILL GIVES A CHANCE TO RUN IT.
2.IF OTHER THREADS ALL ARE HAVING THE PRIORITY LOWER THAN CURRENT EXECUTING THREAD,IT CONTINUE ITS EXECUTION.
3.IF OTHER THREADS ALL ARE HAVING EQUAL PRIORITY WITH CURRENTLY EXECUTING THREAD THEN WE CAN'T EXPECT THE OUTPUT.

class Thread22 extends Thread
{
	public void run()
	{
		//Thread.yield();
		for(int i=0;i<10;i++)
		{
			System.out.println("Dhoni");
		}
	}
}
public class ThreadYeild {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Thread22 t22=new Thread22();
		t22.start();
		t22.setPriority(9);
		
		Thread.yield();
		for(int i=0;i<10;i++)
		{
			System.out.println("YuvaRaj");
		}

	}

}

//JOIN METHOD
class Thread33 extends Thread
{
	public void run()
	{
		//Thread.yield();
		for(int i=0;i<10;i++)
		{
			System.out.println("Dhoni");
		}
	}
}
public class ThreadJoin {

	public static void main(String[] args)throws InterruptedException {
		// TODO Auto-generated method stub
		Thread33 t33=new Thread33();
		t33.start();
		t33.setPriority(9);
		t33.join();
		for(int i=0;i<10;i++)
		{
			System.out.println("YuvaRaj");
		}

	}

}
